{"version":3,"sources":["core/Layout.js","config.js","auth/index.js","user/SignUp.js","user/SignIn.js","core/apiCore.js","core/ShowImage.js","core/Card.js","core/cartHelpers.js","core/Search.js","core/Home.js","core/Menu.js","core/Checkbox.js","core/RadioBox.js","core/FixedPrices.js","core/Shop.js","auth/PrivateRoute.js","user/UserDashboard.js","user/apiUser.js","auth/AdminRoute.js","user/AdminDashboard.js","admin/apiAdmin.js","admin/AddCatogory.js","core/Checkout.js","core/Cart.js","core/Product.js","admin/Orders.js","user/Profile.js","admin/ManageProducts.js","admin/UpdateProduct.js","admin/UpdateCategory.js","admin/AddProduct.js","Routes.js","index.js"],"names":["Layout","title","description","className","children","API","process","isAuthenticate","window","localStorage","getItem","JSON","parse","SignUp","useState","name","email","password","error","success","values","setValues","handleChange","event","target","value","handleSubmit","user","preventDefault","fetch","method","headers","Accept","body","stringify","then","response","json","catch","err","console","log","data","role","style","display","type","class","data-dismiss","aria-label","aria-hidden","to","onChange","onClick","SignIn","loading","redirect","signIn","next","setItem","authenticate","getProducts","sortBy","getCategories","getFilteredProducts","skip","limit","filters","ShowImage","item","url","src","_id","alt","maxHeight","maxWidth","Card","product","showViewProductButton","showAddToCartButton","cartUpdate","showRemoveProductButton","setRun","f","run","undefined","setRedirect","count","setCount","addToCart","cart","push","Array","from","Set","map","p","id","find","addItem","productId","i","updateItem","shouldRedirect","substring","price","category","moment","createdAt","fromNow","quantity","showViewButton","showAddToCartBtn","splice","removeItem","showRemoveButton","showCartUpdateOptions","Search","categories","search","results","searched","setData","useEffect","searchData","params","query","queryString","list","searchSubmit","e","searchMessage","length","onSubmit","c","key","placeholder","border","searchedProducts","Home","productsBySell","setProductsBySell","productsByArrival","setProductsByArrival","setError","setLoading","isActive","history","path","location","pathname","color","withRouter","cursor","signOut","Checkbox","handleFilters","checked","setCheked","handleToggle","currentCategoryId","indexOf","newCheckedCategoryId","RadioBox","prices","setValue","array","Shop","myFilters","setMyFilters","setCategories","setSkip","size","setSize","filteredResults","setFilteredResults","loadFilteredResults","newFilters","loadMore","toSkip","filterBy","priceValues","handlePrice","parseInt","PrivateRoute","Component","component","rest","render","props","state","Dashboard","setHistory","token","init","userId","Authorization","getPurchaseHistory","h","products","purchaseHistory","AdminRoute","AdminDashboard","AddCategory","setName","setSuccess","clickSubmit","createCategory","showSuccess","showError","autoFocus","required","Checkout","clientToken","instance","address","getToken","getBraintreeClientToken","handleAddress","getTotal","reduce","currentValue","nextValue","deliveryAddress","buy","requestPaymentMethod","paymentData","paymentMethodNonce","nonce","amount","processPayment","createOrderData","transaction_id","transaction","order","createOrder","message","showDropIn","onBlur","options","authorization","paypal","flow","onInstance","Cart","items","setItems","showItems","Product","setProduct","relatedProduct","setRelatedProduct","loadingRelatedProduct","setLoadingRelatedProduct","loadSingleProduct","read","listRelated","match","Orders","orders","setOrders","statusValues","setStatusValues","loadOrders","listOrders","loadStatusValues","getStatusValues","showInput","readOnly","handleStatusChange","orderId","status","updateOrderStatus","o","oIndex","borderBottom","index","showStatus","pIndex","padding","Profile","update","alert","auth","updateUser","profileUpdate","redirectUser","ManageProducts","setProducts","loadProducts","destroy","deleteProduct","UpdateProduct","shipping","photo","createdProduct","formData","getProduct","FormData","initCategories","files","set","updateProduct","accept","UpdateCategory","redirectToProfile","categoryId","getCategory","submitCategoryForm","updateCategory","AddProduct","createProduct","Routes","exact","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.56818734.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../styles.css'\r\nconst Layout = ({ title = \"Title\", description = \"Description\", className, children }) => (\r\n    <div>\r\n        <div className=\"jumbotron\">\r\n            <h2>{title}</h2>\r\n            <p className=\"lead\">{description}</p>\r\n        </div>\r\n        <div className={className}>{children}</div>\r\n    </div>\r\n)\r\nexport default Layout;","export const API = process.env.REACT_APP_API_URL;","import { API } from '../config';\r\n\r\nexport const signUp = (user) => (\r\n    fetch(`${API}/signUp`, {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": 'application/json',\r\n        },\r\n        body: JSON.stringify(user)\r\n    },\r\n    )\r\n        .then(response => {\r\n            return response.json()\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        })\r\n)\r\n\r\nexport const signIn = (user) => (\r\n    fetch(`${API}/signIn`, {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": 'application/json',\r\n        },\r\n        body: JSON.stringify(user)\r\n    },\r\n    )\r\n        .then(response => {\r\n            return response.json()\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        })\r\n)\r\n\r\nexport const authenticate = (data, next) => {\r\n    if (typeof window !== 'undefined') {\r\n        localStorage.setItem('jwt', JSON.stringify(data))\r\n        next()\r\n    }\r\n}\r\n\r\nexport const signOut = (next) => {\r\n    if (typeof window !== 'undefined') {\r\n        localStorage.removeItem('jwt')\r\n        next()\r\n        return fetch(`${API}/signOut`, {\r\n            method: \"GET\"\r\n        })\r\n            .then((response) => {\r\n                console.log('signOut', response)\r\n            })\r\n            .catch((err) => {\r\n                console.log('error', err)\r\n            })\r\n    }\r\n}\r\n\r\nexport const isAuthenticate = () =>{\r\n    if(typeof window == 'undefined'){\r\n        return false;\r\n    }\r\n    if(localStorage.getItem('jwt')){\r\n        return JSON.parse(localStorage.getItem('jwt'));\r\n    } else{\r\n        return false;\r\n    }\r\n}","import React, { useState } from 'react';\r\nimport Layout from '../core/Layout';\r\nimport { signUp } from '../auth/index'\r\nimport { Link } from 'react-router-dom';\r\nconst SignUp = () => {\r\n\r\n    const [values, setValues] = useState({\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        error: \"\",\r\n        success: false\r\n    });\r\n\r\n    const { name, email, password, error, success } = values;\r\n\r\n    const handleChange = name => event => {\r\n        setValues({ ...values, error: false, [name]: event.target.value });\r\n\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        setValues({ ...values, error: false })\r\n        signUp({ name, email, password })\r\n            .then((data) => {\r\n                if (data.error) {\r\n                    setValues({ ...values, error: data.error, success: false })\r\n                }\r\n                else {\r\n                    setValues({\r\n                        ...values,\r\n                        name: \"\",\r\n                        email: '',\r\n                        password: '',\r\n                        error: '',\r\n                        success: true,\r\n                    })\r\n                }\r\n            })\r\n    }\r\n    const showError = () => (\r\n        <div className=\"alert alert-danger alert-dismissible fade show\" role=\"alert\" style={{ display: error ? '' : 'none' }}>\r\n            {error}\r\n            <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n                <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n        </div>\r\n    )\r\n    const showSuccess = () => (\r\n        <div className=\"alert alert-info alert-dismissible fade show\" role=\"alert\" style={{ display: success ? '' : 'none' }}>\r\n            New account is created. Please <Link to=\"/signIn\">SignIn</Link>\r\n            <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n                <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n        </div>\r\n    )\r\n    const SignUpForm = () => (\r\n        <form>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Name</label>\r\n                <input onChange={handleChange('name')} type=\"text\" className=\"form-control\" value={name} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Email</label>\r\n                <input onChange={handleChange('email')} type=\"email\" className=\"form-control\" value={email} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Password</label>\r\n                <input onChange={handleChange('password')} type=\"password\" className=\"form-control\" value={password} />\r\n            </div>\r\n            <button onClick={handleSubmit} className=\"btn btn-primary\">Submit</button>\r\n        </form>\r\n    )\r\n    return (\r\n        <div>\r\n            <Layout title=\"SignUp Page\" description=\" Node React E-Commerce App\" className=\"container col-md-8 offset-md-2\" >\r\n                {showError()}\r\n                {showSuccess()}\r\n                {SignUpForm()}\r\n                {/* {JSON.stringify(values)} */}\r\n            </Layout>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignUp;","import React, { useState } from 'react';\r\nimport Layout from '../core/Layout';\r\nimport { signIn, authenticate, isAuthenticate } from '../auth/index'\r\nimport { Redirect } from 'react-router-dom';\r\nconst SignIn = () => {\r\n\r\n    const [values, setValues] = useState({\r\n        email: \"\",\r\n        password: \"\",\r\n        error: \"\",\r\n        loading: false,\r\n        redirect: false\r\n    });\r\n\r\n    const { email, password, error, loading, redirect } = values;\r\n    const { user } = isAuthenticate\r\n    const handleChange = name => event => {\r\n        setValues({ ...values, error: false, [name]: event.target.value });\r\n\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        setValues({ ...values, error: false, loading: true })\r\n        signIn({ email, password })\r\n            .then((data) => {\r\n                if (data.err) {\r\n                    setValues({ ...values, error: data.err, loading: false })\r\n                }\r\n                else {\r\n                    authenticate(data, () => {\r\n                        setValues({\r\n                            ...values,\r\n                            redirect: true,\r\n                        })\r\n                    })\r\n                }\r\n            })\r\n    }\r\n    const showError = () => (\r\n        <div className=\"alert alert-danger alert-dismissible fade show\" role=\"alert\" style={{ display: error ? '' : 'none' }}>\r\n            {error}\r\n            <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n                <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n        </div>\r\n    )\r\n    const showLoading = () => (\r\n        loading && (\r\n            <div className=\"alert alert-info\">\r\n                <h2>Loading...</h2>\r\n            </div>\r\n        )\r\n\r\n    )\r\n    const redirectUser = () => {\r\n        if (redirect) {\r\n            if (user && user.role === 1) {\r\n                return <Redirect to=\"/admin/dashboard\" />\r\n            }\r\n            else {\r\n                return <Redirect to=\"/user/dashboard\" />\r\n            }\r\n        }\r\n\r\n        if (isAuthenticate()) {\r\n            return <Redirect to=\"/\" />\r\n        }\r\n    }\r\n    const SignUpForm = () => (\r\n        <form>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Email</label>\r\n                <input onChange={handleChange('email')} type=\"email\" className=\"form-control\" value={email} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Password</label>\r\n                <input onChange={handleChange('password')} type=\"password\" className=\"form-control\" value={password} />\r\n            </div>\r\n            <button onClick={handleSubmit} className=\"btn btn-primary\">Submit</button>\r\n        </form>\r\n    )\r\n    return (\r\n        <div>\r\n            <Layout title=\"SignUp Page\" description=\" Node React E-Commerce App\" className=\"container col-md-8 offset-md-2\" >\r\n                {showError()}\r\n                {showLoading()}\r\n                {SignUpForm()}\r\n                {redirectUser()}\r\n                {/* {JSON.stringify(values)} */}\r\n            </Layout>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignIn;","\r\nimport { API } from \"../config\";\r\nimport queryString from \"query-string\";\r\n\r\nexport const getProducts = (sortBy) => {\r\n    return fetch(`${API}/products?sortBy=${sortBy}&order=desc&limit=6`, {\r\n        method: \"GET\"\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const getCategories = () => {\r\n    return fetch(`${API}/categories`, {\r\n        method: \"GET\"\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const getFilteredProducts = (skip, limit, filters = {}) => {\r\n    const data = {\r\n        limit,\r\n        skip,\r\n        filters\r\n    };\r\n    return fetch(`${API}/products/by/search`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(data)\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n};\r\n\r\nexport const list = params => {\r\n    const query = queryString.stringify(params);\r\n    console.log(\"query\", query);\r\n    return fetch(`${API}/products/search?${query}`, {\r\n        method: \"GET\"\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const read = productId => {\r\n    return fetch(`${API}/product/${productId}`, {\r\n        method: \"GET\"\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const listRelated = productId => {\r\n    return fetch(`${API}/products/related/${productId}`, {\r\n        method: \"GET\"\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const getBraintreeClientToken = (userId, token) => {\r\n    return fetch(`${API}/braintree/getToken/${userId}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const processPayment = (userId, token, paymentData) => {\r\n    return fetch(`${API}/braintree/payment/${userId}`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify(paymentData)\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const createOrder = (userId, token, createOrderData) => {\r\n    return fetch(`${API}/order/create/${userId}`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify({ order: createOrderData })\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};","import React from \"react\";\r\nimport { API } from \"../config\";\r\n\r\nconst ShowImage = ({ item, url }) => (\r\n    <div className=\"product-img\">\r\n        <img\r\n            src={`${API}/${url}/photo/${item._id}`}\r\n            alt={item.name}\r\n            className=\"mb-3\"\r\n            style={{ maxHeight: \"100%\", maxWidth: \"100%\" }}\r\n        />\r\n    </div>\r\n);\r\n\r\nexport default ShowImage;","import React, { useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport ShowImage from './ShowImage';\r\nimport moment from 'moment';\r\nimport { addItem, updateItem, removeItem } from './cartHelpers';\r\n\r\nconst Card = ({\r\n    product,\r\n    showViewProductButton = true,\r\n    showAddToCartButton = true,\r\n    cartUpdate = false,\r\n    showRemoveProductButton = false,\r\n    setRun = f => f,\r\n    run = undefined\r\n    // changeCartSize\r\n}) => {\r\n    const [redirect, setRedirect] = useState(false);\r\n    const [count, setCount] = useState(product.count);\r\n\r\n    const showViewButton = showViewProductButton => {\r\n        return (\r\n            showViewProductButton && (\r\n                <Link to={`/product/${product._id}`} className=\"mr-2\">\r\n                    <button className=\"btn btn-outline-primary mt-2 mb-2 card-btn-1\">View Product</button>\r\n                </Link>\r\n            )\r\n        );\r\n    };\r\n    const addToCart = () => {\r\n        // console.log('added');\r\n        addItem(product, setRedirect(true));\r\n    };\r\n\r\n    const shouldRedirect = redirect => {\r\n        if (redirect) {\r\n            return <Redirect to=\"/cart\" />;\r\n        }\r\n    };\r\n\r\n    const showAddToCartBtn = showAddToCartButton => {\r\n        return (\r\n            showAddToCartButton && (\r\n                <button onClick={addToCart} className=\"btn btn-outline-warning mt-2 mb-2 card-btn-1  \">\r\n                    Add to cart\r\n                </button>\r\n            )\r\n        );\r\n    };\r\n\r\n    const showStock = quantity => {\r\n        return quantity > 0 ? (\r\n            <span className=\"badge badge-primary badge-pill\">In Stock </span>\r\n        ) : (\r\n                <span className=\"badge badge-primary badge-pill\">Out of Stock </span>\r\n            );\r\n    };\r\n\r\n    const handleChange = productId => event => {\r\n        setRun(!run); // run useEffect in parent Cart\r\n        setCount(event.target.value < 1 ? 1 : event.target.value);\r\n        if (event.target.value >= 1) {\r\n            updateItem(productId, event.target.value);\r\n        }\r\n    };\r\n\r\n    const showCartUpdateOptions = cartUpdate => {\r\n        return (\r\n            cartUpdate && (\r\n                <div>\r\n                    <div className=\"input-group mb-3\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <span className=\"input-group-text\">Adjust Quantity</span>\r\n                        </div>\r\n                        <input type=\"number\" className=\"form-control\" value={count} onChange={handleChange(product._id)} />\r\n                    </div>\r\n                </div>\r\n            )\r\n        );\r\n    };\r\n    const showRemoveButton = showRemoveProductButton => {\r\n        return (\r\n            showRemoveProductButton && (\r\n                <button\r\n                    onClick={() => {\r\n                        removeItem(product._id);\r\n                        setRun(!run); // run useEffect in parent Cart\r\n                    }}\r\n                    className=\"btn btn-outline-danger mt-2 mb-2\"\r\n                >\r\n                    Remove Product\r\n                </button>\r\n            )\r\n        );\r\n    };\r\n    return (\r\n        <div className=\"card \">\r\n            <div className=\"card-header card-header-1 \">{product.name}</div>\r\n            <div className=\"card-body\">\r\n                {shouldRedirect(redirect)}\r\n                <ShowImage item={product} url=\"product\" />\r\n                <p className=\"card-p  mt-2\">{product.description.substring(0, 100)} </p>\r\n                <p className=\"card-p black-10\">$ {product.price}</p>\r\n                <p className=\"black-9\">Category: {product.category && product.category.name}</p>\r\n                <p className=\"black-8\">Added on {moment(product.createdAt).fromNow()}</p>\r\n                {showStock(product.quantity)}\r\n                <br />\r\n\r\n                {showViewButton(showViewProductButton)}\r\n\r\n                {showAddToCartBtn(showAddToCartButton)}\r\n\r\n                {showRemoveButton(showRemoveProductButton)}\r\n\r\n                {showCartUpdateOptions(cartUpdate)}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Card;","export const addItem = (item = [], count = 0, next = f => f) => {\r\n    let cart = [];\r\n    if (typeof window !== 'undefined') {\r\n        if (localStorage.getItem('cart')) {\r\n            cart = JSON.parse(localStorage.getItem('cart'));\r\n        }\r\n        cart.push({\r\n            ...item,\r\n            count: 1\r\n        });\r\n\r\n        // remove duplicates\r\n        // build an Array from new Set and turn it back into array using Array.from\r\n        // so that later we can re-map it\r\n        // new set will only allow unique values in it\r\n        // so pass the ids of each object/product\r\n        // If the loop tries to add the same value again, it'll get ignored\r\n        // ...with the array of ids we got on when first map() was used\r\n        // run map() on it again and return the actual product from the cart\r\n\r\n        cart = Array.from(new Set(cart.map(p => p._id))).map(id => {\r\n            return cart.find(p => p._id === id);\r\n        });\r\n\r\n        localStorage.setItem('cart', JSON.stringify(cart));\r\n        next();\r\n    }\r\n};\r\n\r\nexport const itemTotal = () => {\r\n    if (typeof window !== 'undefined') {\r\n        if (localStorage.getItem('cart')) {\r\n            return JSON.parse(localStorage.getItem('cart')).length;\r\n        }\r\n    }\r\n    return 0;\r\n};\r\n\r\nexport const getCart = () => {\r\n    if (typeof window !== 'undefined') {\r\n        if (localStorage.getItem('cart')) {\r\n            return JSON.parse(localStorage.getItem('cart'));\r\n        }\r\n    }\r\n    return [];\r\n};\r\n\r\nexport const updateItem = (productId, count) => {\r\n    let cart = [];\r\n    if (typeof window !== 'undefined') {\r\n        if (localStorage.getItem('cart')) {\r\n            cart = JSON.parse(localStorage.getItem('cart'));\r\n        }\r\n\r\n        cart.map((product, i) => {\r\n            if (product._id === productId) {\r\n                cart[i].count = count;\r\n            }\r\n        });\r\n\r\n        localStorage.setItem('cart', JSON.stringify(cart));\r\n    }\r\n};\r\n\r\nexport const removeItem = productId => {\r\n    let cart = [];\r\n    if (typeof window !== 'undefined') {\r\n        if (localStorage.getItem('cart')) {\r\n            cart = JSON.parse(localStorage.getItem('cart'));\r\n        }\r\n\r\n        cart.map((product, i) => {\r\n            if (product._id === productId) {\r\n                cart.splice(i, 1);\r\n            }\r\n        });\r\n\r\n        localStorage.setItem('cart', JSON.stringify(cart));\r\n    }\r\n    return cart;\r\n};\r\n\r\nexport const emptyCart = next => {\r\n    if (typeof window !== 'undefined') {\r\n        localStorage.removeItem('cart');\r\n        next();\r\n    }\r\n};","\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { getCategories, list } from \"./apiCore\";\r\nimport Card from \"./Card\";\r\n\r\nconst Search = () => {\r\n    const [data, setData] = useState({\r\n        categories: [],\r\n        category: \"\",\r\n        search: \"\",\r\n        results: [],\r\n        searched: false\r\n    });\r\n\r\n    const { categories, category, search, results, searched } = data;\r\n\r\n    const loadCategories = () => {\r\n        getCategories().then(data => {\r\n            if (data.error) {\r\n                console.log(data.error);\r\n            } else {\r\n                setData({ ...data, categories: data });\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadCategories();\r\n    }, []);\r\n\r\n    const searchData = () => {\r\n        // console.log(search, category);\r\n        if (search) {\r\n            list({ search: search || undefined, category: category }).then(\r\n                response => {\r\n                    if (response.error) {\r\n                        console.log(response.error);\r\n                    } else {\r\n                        setData({ ...data, results: response, searched: true });\r\n                    }\r\n                }\r\n            );\r\n        }\r\n    };\r\n\r\n    const searchSubmit = e => {\r\n        e.preventDefault();\r\n        searchData();\r\n    };\r\n\r\n    const handleChange = name => event => {\r\n        setData({ ...data, [name]: event.target.value, searched: false });\r\n    };\r\n\r\n    const searchMessage = (searched, results) => {\r\n        if (searched && results.length > 0) {\r\n            return `Found ${results.length} products`;\r\n        }\r\n        if (searched && results.length < 1) {\r\n            return `No products found`;\r\n        }\r\n    };\r\n\r\n    const searchedProducts = (results = []) => {\r\n        return (\r\n            <div>\r\n                <h2 className=\"mt-4 mb-4\">\r\n                    {searchMessage(searched, results)}\r\n                </h2>\r\n\r\n                <div className=\"row\">\r\n                    {results.map((product, i) => (\r\n                        <div className=\"col-md-4 col-sm-12 mb-3\">\r\n                            <Card key={i} product={product} />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const searchForm = () => (\r\n        <form onSubmit={searchSubmit}>\r\n            <span className=\"input-group-text\">\r\n                <div className=\"input-group input-group-lg\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <select\r\n                            className=\"btn mr-2\"\r\n                            onChange={handleChange(\"category\")}\r\n                        >\r\n                            <option value=\"All\">All</option>\r\n                            {categories.map((c, i) => (\r\n                                <option key={i} value={c._id}>\r\n                                    {c.name}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n\r\n                    <input\r\n                        type=\"search\"\r\n                        className=\"form-control\"\r\n                        onChange={handleChange(\"search\")}\r\n                        placeholder=\"Search by name\"\r\n                    />\r\n                </div>\r\n                <div\r\n                    className=\"btn input-group-append\"\r\n                    style={{ border: \"none\" }}\r\n                >\r\n                    <button className=\"input-group-text\">Search</button>\r\n                </div>\r\n            </span>\r\n        </form>\r\n    );\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"container mb-3\">{searchForm()}</div>\r\n            <div className=\"container-fluid mb-3\">\r\n                {searchedProducts(results)}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Search;","import React, { useState, useEffect } from 'react';\r\nimport Layout from './Layout';\r\nimport { getProducts } from './apiCore';\r\nimport Card from './Card';\r\nimport Search from './Search';\r\n\r\nconst Home = () => {\r\n    const [productsBySell, setProductsBySell] = useState([]);\r\n    const [productsByArrival, setProductsByArrival] = useState([]);\r\n    const [error, setError] = useState(false);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const loadProductsBySell = () => {\r\n        setLoading(true);\r\n        getProducts('sold').then(data => {\r\n            if (data.error) {\r\n                setError(data.error);\r\n            } else {\r\n                setLoading(false)\r\n                setProductsBySell(data);\r\n            }\r\n        });\r\n    };\r\n\r\n    const loadProductsByArrival = () => {\r\n        setLoading(true);\r\n        getProducts('createdAt').then(data => {\r\n            console.log(data);\r\n            if (data.error) {\r\n                setError(data.error);\r\n            } else {\r\n                setLoading(false);\r\n                setProductsByArrival(data);\r\n            }\r\n        });\r\n    };\r\n    useEffect(() => {\r\n        loadProductsByArrival();\r\n        loadProductsBySell();\r\n    }, []);\r\n\r\n    return (\r\n        <Layout\r\n            title=\"FullStack React Node MongoDB Ecommerce App\"\r\n            description=\"Node React E-commerce App\"\r\n            className=\"container-fluid\"\r\n        >\r\n            <Search />\r\n            <h2 className=\"mb-4\">New Arrivals</h2>\r\n            {loading ? <h5>loading...</h5> : <h5>Found {productsByArrival.length} Product</h5>}\r\n            <div className=\"row\">\r\n                {productsByArrival.map((product, i) => (\r\n                    <div key={i} className=\"col-md-4 col-sm-12 mb-3\">\r\n                        <Card product={product} />\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            <h2 className=\"mb-4\">Best Sellers</h2>\r\n            {loading ? <h5>loading...</h5> : <h5>Found {productsBySell.length} Product</h5>}\r\n            <div className=\"row\">\r\n                {productsBySell.map((product, i) => (\r\n                    <div key={i} className=\"col-md-4 col-sm-12 mb-3\">\r\n                        <Card product={product} />\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { signOut, isAuthenticate } from '../auth/index';\r\nimport { itemTotal } from \"./cartHelpers\";\r\n\r\nconst isActive = (history, path) => {\r\n    if (history.location.pathname === path) {\r\n        return { color: '#ff9900' }\r\n    } else {\r\n        return { color: '#ffffff' }\r\n    }\r\n}\r\n\r\nconst Menu = ({ history }) => (\r\n    <div >\r\n        <ul className=\"nav nav-tabs bg-primary\">\r\n            <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/\" style={isActive(history, '/')}>Home</Link>\r\n            </li>\r\n            {!isAuthenticate() && (\r\n                <>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/signIn\" style={isActive(history, '/signIn')}>SignIn</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/signUp\" style={isActive(history, '/signUp')}>SignUp</Link>\r\n                    </li>\r\n                </>\r\n            )}\r\n\r\n            {isAuthenticate() && isAuthenticate().user.role === 1 && (\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to=\"/admin/dashboard\" style={isActive(history, '/admin/dashboard')}>DashBoard</Link>\r\n                </li>\r\n            )}\r\n\r\n            <li className=\"nav-item\">\r\n                <Link\r\n                    className=\"nav-link\"\r\n                    style={isActive(history, \"/cart\")}\r\n                    to=\"/cart\"\r\n                >\r\n                    Cart{\" \"}\r\n                    <sup>\r\n                        <small className=\"cart-badge\">{itemTotal()}</small>\r\n                    </sup>\r\n                </Link>\r\n            </li>\r\n\r\n\r\n\r\n            {isAuthenticate() && isAuthenticate().user.role === 0 && (\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to=\"/user/dashboard\" style={isActive(history, '/user/dashboard')}>DashBoard</Link>\r\n                </li>\r\n            )}\r\n\r\n            <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/shop\" style={isActive(history, '/shop')}>Shop</Link>\r\n            </li>\r\n\r\n            {isAuthenticate() && (\r\n                <li className=\"nav-item\">\r\n                    <span className=\"nav-link\"\r\n                        to=\"/signUp\"\r\n                        style={{ cursor: 'pointer', color: '#ffffff' }}\r\n                        onClick={() => {\r\n                            signOut(() => {\r\n                                history.push('/');\r\n                            });\r\n                        }}\r\n                    >SignOut</span>\r\n                </li>\r\n            )}\r\n        </ul>\r\n    </div>\r\n)\r\n\r\nexport default withRouter(Menu);","\r\nimport React, { useState } from \"react\";\r\n\r\nconst Checkbox = ({ categories, handleFilters }) => {\r\n    const [checked, setCheked] = useState([]);\r\n\r\n    const handleToggle = c => () => {\r\n        // return the first index or -1\r\n        const currentCategoryId = checked.indexOf(c);\r\n        const newCheckedCategoryId = [...checked];\r\n        // if currently checked was not already in checked state > push\r\n        // else pull/take off\r\n        if (currentCategoryId === -1) {\r\n            newCheckedCategoryId.push(c);\r\n        } else {\r\n            newCheckedCategoryId.splice(currentCategoryId, 1);\r\n        }\r\n        // console.log(newCheckedCategoryId);\r\n        setCheked(newCheckedCategoryId);\r\n        handleFilters(newCheckedCategoryId);\r\n    };\r\n\r\n    return categories.map((c, i) => (\r\n        <li key={i} className=\"list-unstyled\">\r\n            <input\r\n                onChange={handleToggle(c._id)}\r\n                value={checked.indexOf(c._id === -1)}\r\n                type=\"checkbox\"\r\n                className=\"form-check-input\"\r\n            />\r\n            <label className=\"form-check-label\">{c.name}</label>\r\n        </li>\r\n    ));\r\n};\r\n\r\nexport default Checkbox;","\r\nimport React, { useState } from \"react\";\r\n\r\nconst RadioBox = ({ prices, handleFilters }) => {\r\n    const [value, setValue] = useState(0);\r\n\r\n    const handleChange = event => {\r\n        handleFilters(event.target.value);\r\n        setValue(event.target.value);\r\n    };\r\n\r\n    return prices.map((p, i) => (\r\n        <div key={i}>\r\n            <input\r\n                onChange={handleChange}\r\n                value={`${p._id}`}\r\n                name={p}\r\n                type=\"radio\"\r\n                className=\"mr-2 ml-4\"\r\n            />\r\n            <label className=\"form-check-label\">{p.name}</label>\r\n        </div>\r\n    ));\r\n};\r\n\r\nexport default RadioBox;","export const prices = [\r\n    {\r\n        _id: 0,\r\n        name: \"Any\",\r\n        array: []\r\n    },\r\n    {\r\n        _id: 1,\r\n        name: \"$0 to $9\",\r\n        array: [0, 9]\r\n    },\r\n    {\r\n        _id: 2,\r\n        name: \"$10 to $19\",\r\n        array: [10, 19]\r\n    },\r\n    {\r\n        _id: 3,\r\n        name: \"$20 to $29\",\r\n        array: [20, 29]\r\n    },\r\n    {\r\n        _id: 4,\r\n        name: \"$30 to $39\",\r\n        array: [20, 29]\r\n    },\r\n    {\r\n        _id: 5,\r\n        name: \"More than $40\",\r\n        array: [40, 99]\r\n    }\r\n];","import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"./Layout\";\r\nimport Card from \"./Card\";\r\nimport { getCategories, getFilteredProducts } from \"./apiCore\";\r\nimport Checkbox from \"./Checkbox\";\r\nimport RadioBox from \"./RadioBox\";\r\nimport { prices } from \"./FixedPrices\";\r\n\r\nconst Shop = () => {\r\n    const [myFilters, setMyFilters] = useState({\r\n        filters: { category: [], price: [] }\r\n    });\r\n    const [categories, setCategories] = useState([]);\r\n    const [error, setError] = useState(false);\r\n    const [limit, setLimit] = useState(6);\r\n    const [skip, setSkip] = useState(0);\r\n    const [size, setSize] = useState(0);\r\n    const [filteredResults, setFilteredResults] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const init = () => {\r\n        getCategories().then(data => {\r\n            if (data.error) {\r\n                setError(data.error);\r\n            } else {\r\n                setCategories(data);\r\n            }\r\n        });\r\n    };\r\n\r\n    const loadFilteredResults = newFilters => {\r\n        // console.log(newFilters);\r\n        setLoading(true);\r\n        getFilteredProducts(skip, limit, newFilters).then(data => {\r\n            if (data.error) {\r\n                setError(data.error);\r\n            } else {\r\n                setFilteredResults(data.data);\r\n                setLoading(false);\r\n                setSize(data.size);\r\n                setSkip(0);\r\n            }\r\n\r\n        });\r\n    };\r\n\r\n    const loadMore = () => {\r\n        let toSkip = skip + limit;\r\n\r\n        // console.log(newFilters);\r\n        getFilteredProducts(toSkip, limit, myFilters.filters).then(data => {\r\n            if (data.error) {\r\n                setError(data.error);\r\n            } else {\r\n                setFilteredResults([...filteredResults, ...data.data]);\r\n                setSize(data.size);\r\n                setSkip(toSkip);\r\n            }\r\n\r\n        });\r\n    };\r\n\r\n    const loadMoreButton = () => {\r\n        return (\r\n            size > 0 &&\r\n            size >= limit && (\r\n                <button onClick={loadMore} className=\"btn btn-warning mb-5\">\r\n                    Load more\r\n                </button>\r\n            )\r\n        );\r\n    };\r\n\r\n    useEffect(() => {\r\n        init();\r\n        loadFilteredResults(skip, limit, myFilters.filters);\r\n    }, []);\r\n\r\n    const handleFilters = (filters, filterBy) => {\r\n\r\n        // console.log(\"SHOP\", filters, filterBy);\r\n        const newFilters = { ...myFilters };\r\n        newFilters.filters[filterBy] = filters;\r\n\r\n        if (filterBy === \"price\") {\r\n            let priceValues = handlePrice(filters);\r\n            newFilters.filters[filterBy] = priceValues;\r\n        }\r\n        loadFilteredResults(myFilters.filters);\r\n        setMyFilters(newFilters);\r\n    };\r\n\r\n    const handlePrice = value => {\r\n        const data = prices;\r\n        let array = [];\r\n\r\n        for (let key in data) {\r\n            if (data[key]._id === parseInt(value)) {\r\n                array = data[key].array;\r\n            }\r\n        }\r\n        return array;\r\n    };\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Shop Page\"\r\n            description=\"Search and find books of your choice\"\r\n            className=\"container-fluid\"\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-4\">\r\n                    <h4>Filter by categories</h4>\r\n                    <ul>\r\n                        <Checkbox\r\n                            categories={categories}\r\n                            handleFilters={filters =>\r\n                                handleFilters(filters, \"category\")\r\n                            }\r\n                        />\r\n                    </ul>\r\n\r\n                    <h4>Filter by price range</h4>\r\n                    <div>\r\n                        <RadioBox\r\n                            prices={prices}\r\n                            handleFilters={filters =>\r\n                                handleFilters(filters, \"price\")\r\n                            }\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-8\">\r\n                    <h2 className=\"mb-4\">Products</h2>\r\n                    {loading ? <h5>Loading..</h5> : <h5>Found {filteredResults.length} Product</h5>}\r\n                    <div className=\"row\">\r\n                        {filteredResults.map((product, i) => (\r\n                            <div key={i} className=\"col-md-4 col-sm-12  mb-3\">\r\n                                <Card product={product} />\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <hr />\r\n                    {loadMoreButton()}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Shop;","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { isAuthenticate } from \"./index\";\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={props =>\r\n            isAuthenticate() ? (\r\n                <Component {...props} />\r\n            ) : (\r\n                    <Redirect\r\n                        to={{\r\n                            pathname: \"/signin\",\r\n                            state: { from: props.location }\r\n                        }}\r\n                    />\r\n                )\r\n        }\r\n    />\r\n);\r\n\r\nexport default PrivateRoute;","import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../core/Layout\";\r\nimport { isAuthenticate } from \"../auth\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getPurchaseHistory } from \"./apiUser\";\r\nimport moment from \"moment\";\r\nvar count = 1;\r\n\r\nconst Dashboard = () => {\r\n    const [history, setHistory] = useState([]);\r\n\r\n    const {\r\n        user: { _id, name, email, role }\r\n    } = isAuthenticate();\r\n    const token = isAuthenticate().token;\r\n\r\n    const init = (userId, token) => {\r\n        getPurchaseHistory(userId, token).then(data => {\r\n            if (data.error) {\r\n                console.log(data.error);\r\n            } else {\r\n                setHistory(data);\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        init(_id, token);\r\n    }, []);\r\n\r\n    const userLinks = () => {\r\n        return (\r\n            <div className=\"card\">\r\n                <h4 className=\"card-header\">User Links</h4>\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">\r\n                        <Link className=\"nav-link\" to=\"/cart\">\r\n                            My Cart\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        <Link className=\"nav-link\" to={`/profile/${_id}`}>\r\n                            Update Profile\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const userInfo = () => {\r\n        return (\r\n            <div className=\"card mb-5\">\r\n                <h3 className=\"card-header\">User Information</h3>\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">{name}</li>\r\n                    <li className=\"list-group-item\">{email}</li>\r\n                    <li className=\"list-group-item\">\r\n                        {role === 1 ? \"Admin\" : \"Registered User\"}\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const purchaseHistory = history => {\r\n        return (\r\n            <div className=\"card mb-5\">\r\n                <h3 className=\"card-header\">Purchase history</h3>\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">\r\n                        {history.map((h, i) => {\r\n                            return (\r\n                                <div>\r\n                                    <hr />\r\n                                    {h.products.map((p, i) => {\r\n                                        return (\r\n                                            <div key={i}>\r\n                                                <h6>Product name: {p.name}</h6>\r\n                                                <h6>\r\n                                                    Product price: ${p.price}\r\n                                                </h6>\r\n                                                <h6>\r\n                                                    Purchased date:{\" \"}\r\n                                                    {moment(\r\n                                                        p.createdAt\r\n                                                    ).fromNow()}\r\n                                                </h6>\r\n                                            </div>\r\n                                        );\r\n                                    })}\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Dashboard\"\r\n            description={`G'day ${name}!`}\r\n            className=\"container-fluid\"\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">{userLinks()}</div>\r\n                <div className=\"col-9\">\r\n                    {userInfo()}\r\n                    {purchaseHistory(history)}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Dashboard;","\r\nimport { API } from \"../config\";\r\n\r\nexport const read = (userId, token) => {\r\n    return fetch(`${API}/user/${userId}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const update = (userId, token, user) => {\r\n    return fetch(`${API}/user/${userId}`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify(user)\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const updateUser = (user, next) => {\r\n    if (typeof window !== \"undefined\") {\r\n        if (localStorage.getItem(\"jwt\")) {\r\n            let auth = JSON.parse(localStorage.getItem(\"jwt\"));\r\n            auth.user = user;\r\n            localStorage.setItem(\"jwt\", JSON.stringify(auth));\r\n            next();\r\n        }\r\n    }\r\n};\r\n\r\nexport const getPurchaseHistory = (userId, token) => {\r\n    return fetch(`${API}/orders/by/user/${userId}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};","\r\nimport React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { isAuthenticate } from \"./index\";\r\n\r\nconst AdminRoute = ({ component: Component, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={props =>\r\n            isAuthenticate() && isAuthenticate().user.role === 1 ? (\r\n                <Component {...props} />\r\n            ) : (\r\n                    <Redirect\r\n                        to={{\r\n                            pathname: \"/signin\",\r\n                            state: { from: props.location }\r\n                        }}\r\n                    />\r\n                )\r\n        }\r\n    />\r\n);\r\n\r\nexport default AdminRoute;","import React from \"react\";\r\nimport Layout from \"../core/Layout\";\r\nimport { isAuthenticate } from \"../auth\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst AdminDashboard = () => {\r\n    const {\r\n        user: { _id, name, email, role }\r\n    } = isAuthenticate();\r\n\r\n    const adminLinks = () => {\r\n        return (\r\n            <div className=\"card\">\r\n                <h4 className=\"card-header\">Admin Links</h4>\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">\r\n                        <Link className=\"nav-link\" to=\"/create/category\">\r\n                            Create Category\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        <Link className=\"nav-link\" to=\"/create/product\">\r\n                            Create Product\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        <Link className=\"nav-link\" to=\"/admin/orders\">\r\n                            View Orders\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        <Link className=\"nav-link\" to=\"/admin/products\">\r\n                            Manage Products\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const adminInfo = () => {\r\n        return (\r\n            <div className=\"card mb-5\">\r\n                <h3 className=\"card-header\">User Information</h3>\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">{name}</li>\r\n                    <li className=\"list-group-item\">{email}</li>\r\n                    <li className=\"list-group-item\">\r\n                        {role === 1 ? \"Admin\" : \"Registered User\"}\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Dashboard\"\r\n            description={`G'day ${name}!`}\r\n            className=\"container-fluid\"\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">{adminLinks()}</div>\r\n                <div className=\"col-9\">{adminInfo()}</div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default AdminDashboard;","import { API } from '../config';\r\n\r\nexport const createCategory = (userId, token, category) => {\r\n    return fetch(`${API}/category/create/${userId}`, {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify(category)\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n};\r\n\r\nexport const updateCategory = (categoryId, userId, token, category) => {\r\n    return fetch(`${API}/category/${categoryId}/${userId}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n            // content type?\r\n            'Content-Type': 'application/json',\r\n            Accept: 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify(category)\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const createProduct = (userId, token, product) => {\r\n    return fetch(`${API}/product/create/${userId}`, {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: product\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n};\r\n\r\nexport const getCategory = categoryId => {\r\n    return fetch(`${API}/category/${categoryId}`, {\r\n        method: 'GET'\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const getCategories = () => {\r\n    return fetch(`${API}/categories`, {\r\n        method: 'GET'\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const listOrders = (userId, token) => {\r\n    return fetch(`${API}/order/list/${userId}`, {\r\n        method: 'GET',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const getStatusValues = (userId, token) => {\r\n    return fetch(`${API}/order/status-values/${userId}`, {\r\n        method: 'GET',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const updateOrderStatus = (userId, token, orderId, status) => {\r\n    return fetch(`${API}/order/${orderId}/status/${userId}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify({ status, orderId })\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\n\r\n/**\r\n * to perform crud on product\r\n * get all products\r\n * get a single product\r\n * update single product\r\n * delete single product\r\n */\r\n\r\nexport const getProducts = () => {\r\n    return fetch(`${API}/products?limit=undefined`, {\r\n        method: 'GET'\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const deleteProduct = (productId, userId, token) => {\r\n    return fetch(`${API}/product/${productId}/${userId}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const getProduct = productId => {\r\n    return fetch(`${API}/product/${productId}`, {\r\n        method: 'GET'\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const updateProduct = (productId, userId, token, product) => {\r\n    return fetch(`${API}/product/${productId}/${userId}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: product\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n","import React, { useState } from \"react\";\r\nimport Layout from \"../core/Layout\";\r\nimport { isAuthenticate } from \"../auth\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { createCategory } from \"./apiAdmin\";\r\n\r\nconst AddCategory = () => {\r\n    const [name, setName] = useState(\"\");\r\n    const [error, setError] = useState(false);\r\n    const [success, setSuccess] = useState(false);\r\n\r\n    // destructure user and token from localstorage\r\n    const { user, token } = isAuthenticate();\r\n\r\n    const handleChange = e => {\r\n\r\n        setError('');\r\n        setName(e.target.value);\r\n    };\r\n\r\n    const clickSubmit = e => {\r\n        e.preventDefault();\r\n        setError(\"\");\r\n        setSuccess(false);\r\n        // make request to api to create category\r\n        createCategory(user._id, token, { name }).then(data => {\r\n            if (data.error) {\r\n                setError(data.error);\r\n            } else {\r\n                setError(\"\");\r\n                setSuccess(true);\r\n            }\r\n        });\r\n    };\r\n\r\n    const newCategoryFom = () => (\r\n        <form onSubmit={clickSubmit}>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Name</label>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    onChange={handleChange}\r\n                    value={name}\r\n                    autoFocus\r\n                    required\r\n                />\r\n            </div>\r\n            <button className=\"btn btn-outline-primary\">Create Category</button>\r\n        </form>\r\n    );\r\n\r\n    const showSuccess = () => {\r\n        if (success) {\r\n            return (\r\n                <div className=\"alert alert-danger \" role=\"alert\" style={{ display: error ? '' : 'none' }}>\r\n                    {name} is created!\r\n                </div>\r\n            )\r\n        }\r\n    };\r\n\r\n    const showError = () => {\r\n        if (error) {\r\n            return (\r\n                <div className=\"alert alert-danger \" role=\"alert\" style={{ display: error ? '' : 'none' }}>\r\n                    Category should be unique!\r\n                </div>\r\n            )\r\n        }\r\n    };\r\n\r\n    const goBack = () => (\r\n        <div className=\"mt-5\">\r\n            <Link to=\"/admin/dashboard\" className=\"text-warning\">\r\n                Back to Dashboard\r\n            </Link>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Add a new category\"\r\n            description={`G'day ${user.name}, ready to add a new category?`}\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 offset-md-2\">\r\n                    {showSuccess()}\r\n                    {showError()}\r\n                    {newCategoryFom()}\r\n                    {goBack()}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default AddCategory;","import React, { useState, useEffect } from 'react';\r\nimport { getProducts, getBraintreeClientToken, processPayment, createOrder } from './apiCore';\r\nimport { emptyCart } from './cartHelpers';\r\nimport Card from './Card';\r\nimport { isAuthenticate } from '../auth';\r\nimport { Link } from 'react-router-dom';\r\nimport DropIn from 'braintree-web-drop-in-react';\r\n\r\nconst Checkout = ({ products, setRun = f => f, run = undefined }) => {\r\n    const [data, setData] = useState({\r\n        loading: false,\r\n        success: false,\r\n        clientToken: null,\r\n        error: '',\r\n        instance: {},\r\n        address: ''\r\n    });\r\n\r\n    const userId = isAuthenticate() && isAuthenticate().user._id;\r\n    const token = isAuthenticate() && isAuthenticate().token;\r\n\r\n    const getToken = (userId, token) => {\r\n        getBraintreeClientToken(userId, token).then(data => {\r\n            if (data.error) {\r\n                console.log(data.error);\r\n                setData({ ...data, error: data.error });\r\n            } else {\r\n                console.log(data);\r\n                setData({ clientToken: data.clientToken });\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        getToken(userId, token);\r\n    }, []);\r\n\r\n    const handleAddress = event => {\r\n        setData({ ...data, address: event.target.value });\r\n    };\r\n\r\n    const getTotal = () => {\r\n        return products.reduce((currentValue, nextValue) => {\r\n            return currentValue + nextValue.count * nextValue.price;\r\n        }, 0);\r\n    };\r\n\r\n    const showCheckout = () => {\r\n        return isAuthenticate() ? (\r\n            <div>{showDropIn()}</div>\r\n        ) : (\r\n                <Link to=\"/signin\">\r\n                    <button className=\"btn btn-primary\">Sign in to checkout</button>\r\n                </Link>\r\n            );\r\n    };\r\n\r\n    let deliveryAddress = data.address;\r\n\r\n    const buy = () => {\r\n        setData({ loading: true });\r\n        // send the nonce to your server\r\n        // nonce = data.instance.requestPaymentMethod()\r\n        let nonce;\r\n        let getNonce = data.instance\r\n            .requestPaymentMethod()\r\n            .then(data => {\r\n                // console.log(data);\r\n                nonce = data.nonce;\r\n                // once you have nonce (card type, card number) send nonce as 'paymentMethodNonce'\r\n                // and also total to be charged\r\n                // console.log(\r\n                //     \"send nonce and total to process: \",\r\n                //     nonce,\r\n                //     getTotal(products)\r\n                // );\r\n                const paymentData = {\r\n                    paymentMethodNonce: nonce,\r\n                    amount: getTotal(products)\r\n                };\r\n\r\n                processPayment(userId, token, paymentData)\r\n                    .then(response => {\r\n                        console.log(response);\r\n                        // empty cart\r\n                        // create order\r\n\r\n                        const createOrderData = {\r\n                            products: products,\r\n                            transaction_id: response.transaction.id,\r\n                            amount: response.transaction.amount,\r\n                            address: deliveryAddress\r\n                        };\r\n\r\n                        createOrder(userId, token, createOrderData)\r\n                            .then(response => {\r\n                                emptyCart(() => {\r\n                                    setRun(!run); // run useEffect in parent Cart\r\n                                    console.log('payment success and empty cart');\r\n                                    setData({\r\n                                        loading: false,\r\n                                        success: true\r\n                                    });\r\n                                });\r\n                            })\r\n                            .catch(error => {\r\n                                console.log(error);\r\n                                setData({ loading: false });\r\n                            });\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(error);\r\n                        setData({ loading: false });\r\n                    });\r\n            })\r\n            .catch(error => {\r\n                // console.log(\"dropin error: \", error);\r\n                setData({ ...data, error: error.message });\r\n            });\r\n    };\r\n\r\n    const showDropIn = () => (\r\n        <div onBlur={() => setData({ ...data, error: '' })}>\r\n            {data.clientToken !== null && products.length > 0 ? (\r\n                <div>\r\n                    <div className=\"gorm-group mb-3\">\r\n                        <label className=\"text-muted\">Delivery address:</label>\r\n                        <textarea\r\n                            onChange={handleAddress}\r\n                            className=\"form-control\"\r\n                            value={data.address}\r\n                            placeholder=\"Type your delivery address here...\"\r\n                        />\r\n                    </div>\r\n\r\n                    <DropIn\r\n                        options={{\r\n                            authorization: data.clientToken,\r\n                            paypal: {\r\n                                flow: 'vault'\r\n                            }\r\n                        }}\r\n                        onInstance={instance => (data.instance = instance)}\r\n                    />\r\n                    <button onClick={buy} className=\"btn btn-success btn-block\">\r\n                        Pay\r\n                    </button>\r\n                </div>\r\n            ) : null}\r\n        </div>\r\n    );\r\n\r\n    const showError = error => (\r\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\r\n            {error}\r\n        </div>\r\n    );\r\n\r\n    const showSuccess = success => (\r\n        <div className=\"alert alert-info\" style={{ display: success ? '' : 'none' }}>\r\n            Thanks! Your payment was successful!\r\n        </div>\r\n    );\r\n\r\n    const showLoading = loading => loading && <h2 className=\"text-danger\">Loading...</h2>;\r\n\r\n    return (\r\n        <div>\r\n            <h2>Total: ${getTotal()}</h2>\r\n            {showLoading(data.loading)}\r\n            {showSuccess(data.success)}\r\n            {showError(data.error)}\r\n            {showCheckout()}\r\n        </div>\r\n    );\r\n};\r\nexport default Checkout;","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Layout from './Layout';\r\nimport { getCart } from './cartHelpers';\r\nimport Card from './Card';\r\nimport Checkout from './Checkout';\r\n\r\nconst Cart = () => {\r\n    const [items, setItems] = useState([]);\r\n    const [run, setRun] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setItems(getCart());\r\n    }, [run]);\r\n\r\n    const showItems = items => {\r\n        return (\r\n            <div>\r\n                <h2>Your cart has {`${items.length}`} items</h2>\r\n                <hr />\r\n                {items.map((product, i) => (\r\n                    <Card\r\n                        key={i}\r\n                        product={product}\r\n                        showAddToCartButton={false}\r\n                        cartUpdate={true}\r\n                        showRemoveProductButton={true}\r\n                        setRun={setRun}\r\n                        run={run}\r\n                    />\r\n                ))}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const noItemsMessage = () => (\r\n        <h2>\r\n            Your cart is empty. <br /> <Link to=\"/shop\">Continue shopping</Link>\r\n        </h2>\r\n    );\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Shopping Cart\"\r\n            description=\"Manage your cart items. Add remove checkout or continue shopping.\"\r\n            className=\"container-fluid\"\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-6\">{items.length > 0 ? showItems(items) : noItemsMessage()}</div>\r\n\r\n                <div className=\"col-6\">\r\n                    <h2 className=\"mb-4\">Your cart summary</h2>\r\n                    <hr />\r\n                    <Checkout products={items} setRun={setRun} run={run} />\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Cart;","\r\nimport React, { useState, useEffect } from 'react';\r\nimport Layout from './Layout';\r\nimport { read, listRelated } from './apiCore';\r\nimport Card from './Card';\r\n\r\nconst Product = props => {\r\n    const [product, setProduct] = useState({});\r\n    const [relatedProduct, setRelatedProduct] = useState([]);\r\n    const [error, setError] = useState(false);\r\n    const [loadingRelatedProduct, setLoadingRelatedProduct] = useState(true);\r\n\r\n    const loadSingleProduct = productId => {\r\n        setLoadingRelatedProduct(true)\r\n        read(productId).then(data => {\r\n            if (data.error) {\r\n                setError(data.error);\r\n            } else {\r\n                setProduct(data);\r\n                // fetch related products\r\n                listRelated(data._id).then(data => {\r\n                    if (data.error) {\r\n                        setLoadingRelatedProduct(false)\r\n                        setError(data.error);\r\n                    } else {\r\n                        setRelatedProduct(data);\r\n                        setLoadingRelatedProduct(false)\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        const productId = props.match.params.productId;\r\n        loadSingleProduct(productId);\r\n    }, [props]);\r\n\r\n    return (\r\n        <Layout\r\n            title={product && product.name}\r\n            description={product && product.description && product.description.substring(0, 100)}\r\n            className=\"container-fluid\"\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-8\">\r\n                    {product && product.description && <Card product={product} showViewProductButton={false} />}\r\n                </div>\r\n\r\n                <div className=\"col-4\">\r\n                    <h4>Related products</h4>\r\n                    {loadingRelatedProduct ? <h6>Loading..</h6> : ` ${relatedProduct.length} Related Product`}\r\n\r\n                    {error === false ? relatedProduct.map((p, i) => (\r\n                        <div className=\"mb-3\" key={i}>\r\n                            <Card product={p} />\r\n                        </div>\r\n                    )) : ' '}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Product;","import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../core/Layout\";\r\nimport { isAuthenticate } from \"../auth\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { listOrders, getStatusValues, updateOrderStatus } from \"./apiAdmin\";\r\nimport moment from \"moment\";\r\n\r\nconst Orders = () => {\r\n    const [orders, setOrders] = useState([]);\r\n    const [statusValues, setStatusValues] = useState([]);\r\n\r\n    const { user, token } = isAuthenticate();\r\n\r\n    const loadOrders = () => {\r\n        listOrders(user._id, token).then(data => {\r\n            if (data.error) {\r\n                console.log(data.error);\r\n            } else {\r\n                setOrders(data);\r\n            }\r\n        });\r\n    };\r\n\r\n    const loadStatusValues = () => {\r\n        getStatusValues(user._id, token).then(data => {\r\n            if (data.error) {\r\n                console.log(data.error);\r\n            } else {\r\n                setStatusValues(data);\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadOrders();\r\n        loadStatusValues();\r\n    }, []);\r\n\r\n    const showOrdersLength = () => {\r\n        if (orders.length > 0) {\r\n            return (\r\n                <h1 className=\"text-danger display-2\">\r\n                    Total orders: {orders.length}\r\n                </h1>\r\n            );\r\n        } else {\r\n            return <h1 className=\"text-danger\">No orders</h1>;\r\n        }\r\n    };\r\n\r\n    const showInput = (key, value) => (\r\n        <div className=\"input-group mb-2 mr-sm-2\">\r\n            <div className=\"input-group-prepend\">\r\n                <div className=\"input-group-text\">{key}</div>\r\n            </div>\r\n            <input\r\n                type=\"text\"\r\n                value={value}\r\n                className=\"form-control\"\r\n                readOnly\r\n            />\r\n        </div>\r\n    );\r\n\r\n    const handleStatusChange = (e, orderId) => {\r\n        updateOrderStatus(user._id, token, orderId, e.target.value).then(\r\n            data => {\r\n                if (data.error) {\r\n                    console.log(\"Status update failed\");\r\n                } else {\r\n                    loadOrders();\r\n                }\r\n            }\r\n        );\r\n    };\r\n\r\n    const showStatus = o => (\r\n        <div className=\"form-group\">\r\n            <h3 className=\"mark mb-4\">Status: {o.status}</h3>\r\n            <select\r\n                className=\"form-control\"\r\n                onChange={e => handleStatusChange(e, o._id)}\r\n            >\r\n                <option>Update Status</option>\r\n                {statusValues.map((status, index) => (\r\n                    <option key={index} value={status}>\r\n                        {status}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Orders\"\r\n            description={`G'day ${\r\n                user.name\r\n                }, you can manage all the orders here`}\r\n            className=\"container-fluid\"\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 offset-md-2\">\r\n                    {showOrdersLength()}\r\n\r\n                    {orders.map((o, oIndex) => {\r\n                        return (\r\n                            <div\r\n                                className=\"mt-5\"\r\n                                key={oIndex}\r\n                                style={{ borderBottom: \"5px solid indigo\" }}\r\n                            >\r\n                                <h2 className=\"mb-5\">\r\n                                    <span className=\"bg-primary\">\r\n                                        Order ID: {o._id}\r\n                                    </span>\r\n                                </h2>\r\n\r\n                                <ul className=\"list-group mb-2\">\r\n                                    <li className=\"list-group-item\">\r\n                                        {showStatus(o)}\r\n                                    </li>\r\n                                    <li className=\"list-group-item\">\r\n                                        Transaction ID: {o.transaction_id}\r\n                                    </li>\r\n                                    <li className=\"list-group-item\">\r\n                                        Amount: ${o.amount}\r\n                                    </li>\r\n                                    <li className=\"list-group-item\">\r\n                                        Ordered by: {o.user.name}\r\n                                    </li>\r\n                                    <li className=\"list-group-item\">\r\n                                        Ordered on:{\" \"}\r\n                                        {moment(o.createdAt).fromNow()}\r\n                                    </li>\r\n                                    <li className=\"list-group-item\">\r\n                                        Delivery address: {o.address}\r\n                                    </li>\r\n                                </ul>\r\n\r\n                                <h3 className=\"mt-4 mb-4 font-italic\">\r\n                                    Total products in the order:{\" \"}\r\n                                    {o.products.length}\r\n                                </h3>\r\n\r\n                                {o.products.map((p, pIndex) => (\r\n                                    <div\r\n                                        className=\"mb-4\"\r\n                                        key={pIndex}\r\n                                        style={{\r\n                                            padding: \"20px\",\r\n                                            border: \"1px solid indigo\"\r\n                                        }}\r\n                                    >\r\n                                        {showInput(\"Product name\", p.name)}\r\n                                        {showInput(\"Product price\", p.price)}\r\n                                        {showInput(\"Product total\", p.count)}\r\n                                        {showInput(\"Product Id\", p._id)}\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Orders;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Layout from '../core/Layout';\r\nimport { isAuthenticate } from '../auth';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { read, update, updateUser } from './apiUser';\r\n\r\nconst Profile = ({ match }) => {\r\n    const [values, setValues] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        error: false,\r\n        success: false\r\n    });\r\n\r\n    const { token } = isAuthenticate();\r\n    const { name, email, password, error, success } = values;\r\n\r\n    const init = userId => {\r\n        // console.log(userId);\r\n        read(userId, token).then(data => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: true });\r\n            } else {\r\n                setValues({ ...values, name: data.name, email: data.email });\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        init(match.params.userId);\r\n    }, []);\r\n\r\n    const handleChange = name => e => {\r\n        setValues({ ...values, error: false, [name]: e.target.value });\r\n    };\r\n\r\n    const clickSubmit = e => {\r\n        e.preventDefault();\r\n        update(match.params.userId, token, { name, email, password }).then(data => {\r\n            if (data.error) {\r\n                // console.log(data.error);\r\n                alert(data.error);\r\n            } else {\r\n                updateUser(data, () => {\r\n                    setValues({\r\n                        ...values,\r\n                        name: data.name,\r\n                        email: data.email,\r\n                        success: true\r\n                    });\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    const redirectUser = success => {\r\n        if (success) {\r\n            return <Redirect to=\"/cart\" />;\r\n        }\r\n    };\r\n\r\n    const profileUpdate = (name, email, password) => (\r\n        <form>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Name</label>\r\n                <input type=\"text\" onChange={handleChange('name')} className=\"form-control\" value={name} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Email</label>\r\n                <input type=\"email\" onChange={handleChange('email')} className=\"form-control\" value={email} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Password</label>\r\n                <input type=\"password\" onChange={handleChange('password')} className=\"form-control\" value={password} />\r\n            </div>\r\n\r\n            <button onClick={clickSubmit} className=\"btn btn-primary\">\r\n                Submit\r\n            </button>\r\n        </form>\r\n    );\r\n\r\n    return (\r\n        <Layout title=\"Profile\" description=\"Update your profile\" className=\"container-fluid\">\r\n            <h2 className=\"mb-4\">Profile update</h2>\r\n            {profileUpdate(name, email, password)}\r\n            {redirectUser(success)}\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Profile;","import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../core/Layout\";\r\nimport { isAuthenticate } from \"../auth\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getProducts, deleteProduct } from \"./apiAdmin\";\r\n\r\nconst ManageProducts = () => {\r\n    const [products, setProducts] = useState([]);\r\n\r\n    const { user, token } = isAuthenticate();\r\n\r\n    const loadProducts = () => {\r\n        getProducts().then(data => {\r\n            if (data.error) {\r\n                console.log(data.error);\r\n            } else {\r\n                setProducts(data);\r\n            }\r\n        });\r\n    };\r\n\r\n    const destroy = productId => {\r\n        deleteProduct(productId, user._id, token).then(data => {\r\n            if (data.error) {\r\n                console.log(data.error);\r\n            } else {\r\n                loadProducts();\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadProducts();\r\n    }, []);\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Manage Products\"\r\n            description=\"Perform CRUD on products\"\r\n            className=\"container-fluid\"\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                    <h2 className=\"text-center\">\r\n                        Total {products.length} products\r\n                    </h2>\r\n                    <hr />\r\n                    <ul className=\"list-group\">\r\n                        {products.map((p, i) => (\r\n                            <li\r\n                                key={i}\r\n                                className=\"list-group-item d-flex justify-content-between \"\r\n                            >\r\n                                <strong >{p.name}</strong>\r\n                                <Link to={`/admin/product/update/${p._id}`} >\r\n                                    <button className=\"badge badge-warning badge-pill align-baseline\">\r\n                                        Update\r\n                                    </button>\r\n\r\n                                </Link>\r\n                                <button\r\n                                    onClick={() => destroy(p._id)}\r\n                                    className=\"badge badge-danger badge-pill\"\r\n                                >\r\n                                    Delete\r\n                                </button>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                    <br />\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default ManageProducts;","import React, { useState, useEffect } from 'react';\r\nimport Layout from '../core/Layout';\r\nimport { isAuthenticate } from '../auth';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { getProduct, getCategories, updateProduct } from './apiAdmin';\r\n\r\nconst UpdateProduct = ({ match }) => {\r\n    const [values, setValues] = useState({\r\n        name: '',\r\n        description: '',\r\n        price: '',\r\n        categories: [],\r\n        category: '',\r\n        shipping: '',\r\n        quantity: '',\r\n        photo: '',\r\n        loading: false,\r\n        error: false,\r\n        createdProduct: '',\r\n        // redirectToProfile: false,\r\n        formData: ''\r\n    });\r\n    const [categories, setCategories] = useState([]);\r\n\r\n    const { user, token } = isAuthenticate();\r\n    const {\r\n        name,\r\n        description,\r\n        price,\r\n        // categories,\r\n        category,\r\n        shipping,\r\n        quantity,\r\n        loading,\r\n        error,\r\n        createdProduct,\r\n        // redirectToProfile,\r\n        formData\r\n    } = values;\r\n\r\n    const init = productId => {\r\n        getProduct(productId).then(data => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error });\r\n            } else {\r\n                // populate the state\r\n                setValues({\r\n                    ...values,\r\n                    name: data.name,\r\n                    description: data.description,\r\n                    price: data.price,\r\n                    category: data.category._id,\r\n                    shipping: data.shipping,\r\n                    quantity: data.quantity,\r\n                    formData: new FormData()\r\n                });\r\n                // load categories\r\n                initCategories();\r\n            }\r\n        });\r\n    };\r\n\r\n    // load categories and set form data\r\n    const initCategories = () => {\r\n        getCategories().then(data => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error });\r\n            } else {\r\n                setCategories(data);\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        init(match.params.productId);\r\n    }, []);\r\n\r\n    const handleChange = name => event => {\r\n        const value = name === 'photo' ? event.target.files[0] : event.target.value;\r\n        formData.set(name, value);\r\n        setValues({ ...values, [name]: value });\r\n    };\r\n\r\n    const clickSubmit = event => {\r\n        event.preventDefault();\r\n        setValues({ ...values, error: '', loading: true });\r\n\r\n        updateProduct(match.params.productId, user._id, token, formData).then(data => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error });\r\n            } else {\r\n                setValues({\r\n                    ...values,\r\n                    name: '',\r\n                    description: '',\r\n                    photo: '',\r\n                    price: '',\r\n                    quantity: '',\r\n                    loading: false,\r\n                    error: false,\r\n                    // redirectToProfile: true,\r\n                    createdProduct: data.name\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    const newPostForm = () => (\r\n        <form className=\"mb-3\" onSubmit={clickSubmit}>\r\n            <h4>Post Photo</h4>\r\n            <div className=\"form-group\">\r\n                <label className=\"btn btn-secondary\">\r\n                    <input onChange={handleChange('photo')} type=\"file\" name=\"photo\" accept=\"image/*\" />\r\n                </label>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Name</label>\r\n                <input onChange={handleChange('name')} type=\"text\" className=\"form-control\" value={name} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Description</label>\r\n                <textarea onChange={handleChange('description')} className=\"form-control\" value={description} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Price</label>\r\n                <input onChange={handleChange('price')} type=\"number\" className=\"form-control\" value={price} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Category</label>\r\n                <select onChange={handleChange('category')} className=\"form-control\">\r\n                    <option>Please select</option>\r\n                    {categories &&\r\n                        categories.map((c, i) => (\r\n                            <option key={i} value={c._id}>\r\n                                {c.name}\r\n                            </option>\r\n                        ))}\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Shipping</label>\r\n                <select onChange={handleChange('shipping')} className=\"form-control\">\r\n                    <option>Please select</option>\r\n                    <option value=\"0\">No</option>\r\n                    <option value=\"1\">Yes</option>\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Quantity</label>\r\n                <input onChange={handleChange('quantity')} type=\"number\" className=\"form-control\" value={quantity} />\r\n            </div>\r\n\r\n            <button className=\"btn btn-outline-primary\">Update Product</button>\r\n        </form>\r\n    );\r\n\r\n    const showError = () => (\r\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\r\n            {error}\r\n        </div>\r\n    );\r\n\r\n    const showSuccess = () => (\r\n        <div className=\"alert alert-info\" style={{ display: createdProduct ? '' : 'none' }}>\r\n            <h2>{`${createdProduct}`} is updated!</h2>\r\n        </div>\r\n    );\r\n\r\n    const showLoading = () =>\r\n        loading && (\r\n            <div className=\"alert alert-success\">\r\n                <h2>Loading...</h2>\r\n            </div>\r\n        );\r\n\r\n    // const redirectUser = () => {\r\n    //     if (redirectToProfile) {\r\n    //         if (!error) {\r\n    //             return <Redirect to=\"/\" />;\r\n    //         }\r\n    //     }\r\n    // };\r\n\r\n    return (\r\n        <Layout title=\"Update  products easily!\" description={`G'day ${user.name}, You can update any product you want!`}>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 offset-md-2\">\r\n                    {showLoading()}\r\n                    {showSuccess()}\r\n                    {showError()}\r\n                    {newPostForm()}\r\n                    {/* {redirectUser()} */}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default UpdateProduct;","\r\nimport React, { useState, useEffect } from 'react';\r\nimport Layout from '../core/Layout';\r\nimport { isAuthenticate } from '../auth';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { getCategory, updateCategory } from './apiAdmin';\r\n// {category: [\"5cd0258f2793ec6e100bc191\"], price: []}\r\n// http://localhost:3000/admin/category/update/5cd0258f2793ec6e100bc191\r\nconst UpdateCategory = ({ match }) => {\r\n    const [values, setValues] = useState({\r\n        name: '',\r\n        error: '',\r\n        redirectToProfile: false,\r\n        formData: ''\r\n    });\r\n\r\n    // destructure user and token from localStorage\r\n    const { user, token } = isAuthenticate();\r\n\r\n    const { name, error, redirectToProfile } = values;\r\n\r\n    const init = categoryId => {\r\n        getCategory(categoryId, token).then(data => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error });\r\n            } else {\r\n                // populate the state\r\n                setValues({\r\n                    ...values,\r\n                    name: data.name\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        init(match.params.categoryId);\r\n    }, []);\r\n\r\n    const handleChange = name => event => {\r\n        setValues({ ...values, error: false, [name]: event.target.value });\r\n    };\r\n\r\n    const submitCategoryForm = e => {\r\n        e.preventDefault();\r\n        // update with ? you should send category name otherwise what to update?\r\n        const category = {\r\n            name: name\r\n        };\r\n        updateCategory(match.params.categoryId, user._id, token, category).then(data => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error });\r\n            } else {\r\n                setValues({\r\n                    ...values,\r\n                    name: data.name,\r\n                    error: false,\r\n                    redirectToProfile: true\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    const updateCategoryForm = () => (\r\n        <div className=\"wrap-login100 p-l-85 p-r-85 p-t-55 p-b-55\">\r\n            <form className=\"mb-5\" onSubmit={submitCategoryForm}>\r\n                <span className=\"login100-form-title p-b-32 m-b-7\">Update Category Form</span>\r\n                <span className=\"txt1 p-b-11\">Category Name</span>\r\n                <br />\r\n                <br />\r\n                <div className=\"wrap-input100 validate-input m-b-36\">\r\n                    <input\r\n                        onChange={handleChange('name')}\r\n                        value={name}\r\n                        className=\"input100\"\r\n                        type=\"text\"\r\n                        required\r\n                        name=\"name\"\r\n                    />\r\n                </div>\r\n                <div className=\"w-size25\">\r\n                    <button type=\"submit\" className=\"flex-c-m size2 bg1 bo-rad-23 hov1 m-text3 trans-0-4\">\r\n                        Save Changes\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n\r\n    const showError = () => (\r\n        <div className={'alert alert-danger'} role=\"alert\" style={{ display: error ? '' : 'none' }}>\r\n            <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n                <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n            {error}\r\n        </div>\r\n    );\r\n\r\n    const redirectUser = () => {\r\n        if (redirectToProfile) {\r\n            if (!error) {\r\n                return <Redirect to=\"/admin/categories\" />;\r\n            }\r\n        }\r\n    };\r\n\r\n    const goBackBTN = () => {\r\n        return (\r\n            <div className=\"mt-5\">\r\n                <Link to=\"/admin/categories\" className=\"text-info\">\r\n                    Back To Admin Home\r\n                </Link>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <Layout\r\n            title={`Hi ${user.name}`}\r\n            description={`This is Update Product Action Page`}\r\n            className=\"container-fluid\"\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 offset-md-2 m-b-250 mb-5\">\r\n                    {showError()}\r\n                    {updateCategoryForm()}\r\n                    {goBackBTN()}\r\n                    {redirectUser()}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default UpdateCategory;","import React, { useState, useEffect } from 'react';\r\nimport Layout from '../core/Layout';\r\nimport { isAuthenticate } from '../auth';\r\nimport { Link } from 'react-router-dom';\r\nimport { createProduct, getCategories } from './apiAdmin';\r\n\r\nconst AddProduct = () => {\r\n    const [values, setValues] = useState({\r\n        name: '',\r\n        description: '',\r\n        price: '',\r\n        categories: [],\r\n        category: '',\r\n        shipping: '',\r\n        quantity: '',\r\n        photo: '',\r\n        loading: false,\r\n        error: '',\r\n        createdProduct: '',\r\n        redirectToProfile: false,\r\n        formData: ''\r\n    });\r\n\r\n    const { user, token } = isAuthenticate();\r\n    const {\r\n        name,\r\n        description,\r\n        price,\r\n        categories,\r\n        category,\r\n        shipping,\r\n        quantity,\r\n        loading,\r\n        error,\r\n        createdProduct,\r\n        redirectToProfile,\r\n        formData\r\n    } = values;\r\n\r\n    // load categories and set form data\r\n    const init = () => {\r\n        getCategories().then(data => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error });\r\n            } else {\r\n                setValues({\r\n                    ...values,\r\n                    categories: data,\r\n                    formData: new FormData()\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        init();\r\n    }, []);\r\n\r\n    const handleChange = name => event => {\r\n        const value = name === 'photo' ? event.target.files[0] : event.target.value;\r\n        formData.set(name, value);\r\n        setValues({ ...values, [name]: value });\r\n    };\r\n\r\n    const clickSubmit = event => {\r\n        event.preventDefault();\r\n        setValues({ ...values, error: '', loading: true });\r\n\r\n        createProduct(user._id, token, formData).then(data => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error });\r\n            } else {\r\n                setValues({\r\n                    ...values,\r\n                    name: '',\r\n                    description: '',\r\n                    photo: '',\r\n                    price: '',\r\n                    quantity: '',\r\n                    loading: false,\r\n                    createdProduct: data.name\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    const newPostForm = () => (\r\n        <form className=\"mb-3\" onSubmit={clickSubmit}>\r\n            <h4>Post Photo</h4>\r\n            <div className=\"form-group\">\r\n                <label className=\"btn btn-secondary\">\r\n                    <input onChange={handleChange('photo')} type=\"file\" name=\"photo\" accept=\"image/*\" />\r\n                </label>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Name</label>\r\n                <input onChange={handleChange('name')} type=\"text\" className=\"form-control\" value={name} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Description</label>\r\n                <textarea onChange={handleChange('description')} className=\"form-control\" value={description} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Price</label>\r\n                <input onChange={handleChange('price')} type=\"number\" className=\"form-control\" value={price} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Category</label>\r\n                <select onChange={handleChange('category')} className=\"form-control\">\r\n                    <option>Please select</option>\r\n                    {categories &&\r\n                        categories.map((c, i) => (\r\n                            <option key={i} value={c._id}>\r\n                                {c.name}\r\n                            </option>\r\n                        ))}\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Shipping</label>\r\n                <select onChange={handleChange('shipping')} className=\"form-control\">\r\n                    <option>Please select</option>\r\n                    <option value=\"0\">No</option>\r\n                    <option value=\"1\">Yes</option>\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Quantity</label>\r\n                <input onChange={handleChange('quantity')} type=\"number\" className=\"form-control\" value={quantity} />\r\n            </div>\r\n\r\n            <button className=\"btn btn-outline-primary\">Create Product</button>\r\n        </form>\r\n    );\r\n\r\n    const showError = () => (\r\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\r\n            {error}\r\n        </div>\r\n    );\r\n\r\n    const showSuccess = () => (\r\n        <div className=\"alert alert-info\" style={{ display: createdProduct ? '' : 'none' }}>\r\n            <h2>{`${createdProduct}`} is created!</h2>\r\n        </div>\r\n    );\r\n\r\n    const showLoading = () =>\r\n        loading && (\r\n            <div className=\"alert alert-success\">\r\n                <h2>Loading...</h2>\r\n            </div>\r\n        );\r\n\r\n    return (\r\n        <Layout title=\"Add a new product\" description={`G'day ${user.name}, ready to add a new product?`}>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 offset-md-2\">\r\n                    {showLoading()}\r\n                    {showSuccess()}\r\n                    {showError()}\r\n                    {newPostForm()}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default AddProduct;","import React from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport SignUp from './user/SignUp';\r\nimport SignIn from './user/SignIn';\r\nimport Home from './core/Home';\r\nimport Menu from './core/Menu';\r\nimport Shop from './core/Shop';\r\nimport PrivateRoute from './auth/PrivateRoute';\r\nimport Dashboard from './user/UserDashboard';\r\nimport AdminRoute from './auth/AdminRoute';\r\nimport AdminDashboard from './user/AdminDashboard';\r\nimport AddCategory from './admin/AddCatogory';\r\nimport Cart from './core/Cart';\r\nimport Product from './core/Product';\r\nimport Orders from './admin/Orders';\r\nimport Profile from './user/Profile'\r\nimport ManageProducts from './admin/ManageProducts';\r\nimport UpdateProduct from './admin/UpdateProduct';\r\nimport UpdateCategory from './admin/UpdateCategory';\r\nimport AddProduct from './admin/AddProduct';\r\nconst Routes = () => {\r\n    return (\r\n        <div>\r\n            <BrowserRouter>\r\n                <Menu />\r\n                <Switch>\r\n                    <Route path=\"/\" exact component={Home} />\r\n                    <Route path=\"/signIn\" exact component={SignIn} />\r\n                    <Route path=\"/signUp\" exact component={SignUp} />\r\n                    <PrivateRoute path=\"/user/dashboard\" exact component={Dashboard} />\r\n                    <AdminRoute path=\"/admin/dashboard\" exact component={AdminDashboard} />\r\n                    <AdminRoute path=\"/create/category\" exact component={AddCategory} />\r\n                    <Route path=\"/shop\" exact component={Shop} />\r\n                    <Route path=\"/product/:productId\" exact component={Product} />\r\n                    <Route path=\"/cart\" exact component={Cart} />\r\n                    <AdminRoute path=\"/admin/orders\" exact component={Orders} />\r\n                    <PrivateRoute path=\"/profile/:userId\" exact component={Profile} />\r\n                    <PrivateRoute path=\"/admin/products\" exact component={ManageProducts} />\r\n                    <AdminRoute path=\"/admin/product/update/:productId\" exact component={UpdateProduct} />\r\n                    <AdminRoute path=\"/admin/category/update/:categoryId\" exact component={UpdateCategory} />\r\n                    <AdminRoute path=\"/create/product\" exact component={AddProduct} />\r\n                </Switch>\r\n            </BrowserRouter>\r\n        </div>\r\n    )\r\n}\r\nexport default Routes;","import React from 'react';\nimport Routes from './Routes.js';\nimport ReactDOM from 'react-dom';\nReactDOM.render(<Routes />, document.getElementById('root'))\n\n"],"sourceRoot":""}